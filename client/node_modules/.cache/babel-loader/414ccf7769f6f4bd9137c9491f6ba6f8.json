{"ast":null,"code":"import _classCallCheck from \"/home/benk/integrify_08/nodeprojects/node-exercise/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/benk/integrify_08/nodeprojects/node-exercise/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/benk/integrify_08/nodeprojects/node-exercise/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/benk/integrify_08/nodeprojects/node-exercise/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/benk/integrify_08/nodeprojects/node-exercise/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/benk/integrify_08/nodeprojects/node-exercise/client/src/App.js\";\nimport React, { Component } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { BrowserRouter as Router, Switch, Redirect } from \"react-router-dom\";\nimport Route from \"react-router-dom/Route\";\nimport axios from \"axios\";\nimport \"font-awesome/css/font-awesome.css\";\nimport Presenters from \"./components/Presenters\";\nimport AddPresenter from \"./components/AddPresenter\";\nimport EditPresenter from \"./components/EditPresenter\";\nimport View from \"./components/View\";\nimport Header from \"./components/Header\";\nimport Home from \"./components/pages/Home\";\nimport NotFound from \"./components/NotFound\";\nimport LogInForm from \"./components/LogInForm\";\nimport \"./App.css\";\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      presenters: []\n    };\n\n    _this.getPresentersFromServer = function () {\n      axios.get(\"/presenters\").then(function (response) {\n        console.log(response);\n\n        _this.setState({\n          presenters: response.data\n        });\n      });\n    };\n\n    _this.getPresenter = function (id) {\n      var matchedPresenterIndex;\n\n      _this.state.presenters.forEach(function (stud, index) {\n        if (stud._id === id) {\n          //console.log ('I a m getPresenter',id);\n          matchedPresenterIndex = index;\n        }\n      });\n\n      var machedStudData = _this.state.presenters[matchedPresenterIndex];\n      return {\n        index: matchedPresenterIndex,\n        data: machedStudData\n      };\n    };\n\n    _this.onEdit = function (presenter, index) {\n      axios.put(\"/presenters/\".concat(presenter._id), presenter).then(function (response) {\n        //console.log ('I a m responding for edit',response);\n        var newStdents = _this.state.presenters;\n        newStdents.splice(index, 1, presenter);\n\n        _this.setState({\n          presenters: newStdents\n        });\n\n        console.log(\"I a m responding for edit\", _this.state.presenters);\n      }).catch(function (err) {\n        return console.log(err);\n      }); //const updatedVal = this.props.presenters.map((dat,i) => {\n    };\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      axios.get(\"/presenters\").then(function (response) {\n        //console.log('componentDidMount',response.data);\n        _this2.setState({\n          presenters: response.data\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n\n    /*onView = (presenter,index) => {\n        //this.props.history.push('/presenter/view/:id');\n      axios\n      .get(`/presenter/view/${this.props.match.params.id}`)\n      //.get (`/presenter/view/${presenter._id}`,presenter)\n      .then (response => {\n        console.log ('I a m responseOnView',response);\n        this.setState({\n          presenters: response.data\n        });\n       \n       })\n     .catch (err => console.log (err));\n     const updatedName = this.state.presenters.presentername\n     //const updatedView = this.state.presenters.filter(stud => stud._id === presenter._id);\n     //this.setState({\n     //presenters: updatedView\n    //});\n     }*/\n    value: function render() {\n      var _this3 = this;\n\n      console.log(\"i am presenters\", this.state.presenters);\n      return React.createElement(Router, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, React.createElement(Header, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }), React.createElement(Switch, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, React.createElement(Route, {\n        exact: true,\n        path: \"/\",\n        component: Home,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"/login\",\n        component: LogInForm,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"/presenters/edit/:id\",\n        render: function render(props) {\n          return React.createElement(EditPresenter, Object.assign({}, props, {\n            onEdit: _this3.onEdit,\n            presenter: _this3.getPresenter(props.match.params.id),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 110\n            },\n            __self: this\n          }));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"/presenters/add\",\n        component: AddPresenter,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"/presenters/show\",\n        render: function render(props) {\n          return React.createElement(Presenters, Object.assign({}, props, {\n            presenters: _this3.state.presenters,\n            getPresentersFromServer: _this3.getPresentersFromServer,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 121\n            },\n            __self: this\n          }));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"/presenter/view/:id\",\n        render: function render(props) {\n          return React.createElement(View, Object.assign({}, props, {\n            presenter: _this3.getPresenter(props.match.params.id),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 131\n            },\n            __self: this\n          }));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"/not-found\",\n        component: NotFound,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }), React.createElement(Redirect, {\n        to: \"/not-found\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/home/benk/integrify_08/nodeprojects/node-exercise/client/src/App.js"],"names":["React","Component","BrowserRouter","Router","Switch","Redirect","Route","axios","Presenters","AddPresenter","EditPresenter","View","Header","Home","NotFound","LogInForm","App","state","presenters","getPresentersFromServer","get","then","response","console","log","setState","data","getPresenter","id","matchedPresenterIndex","forEach","stud","index","_id","machedStudData","onEdit","presenter","put","newStdents","splice","catch","err","props","match","params"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { BrowserRouter as Router, Switch, Redirect } from \"react-router-dom\";\nimport Route from \"react-router-dom/Route\";\nimport axios from \"axios\";\nimport \"font-awesome/css/font-awesome.css\";\n\nimport Presenters from \"./components/Presenters\";\nimport AddPresenter from \"./components/AddPresenter\";\nimport EditPresenter from \"./components/EditPresenter\";\nimport View from \"./components/View\";\nimport Header from \"./components/Header\";\nimport Home from \"./components/pages/Home\";\nimport NotFound from \"./components/NotFound\";\nimport LogInForm from \"./components/LogInForm\";\nimport \"./App.css\";\n\nclass App extends Component {\n  state = {\n    presenters: []\n  };\n\n  componentDidMount() {\n    axios.get(\"/presenters\").then(response => {\n      //console.log('componentDidMount',response.data);\n      this.setState({\n        presenters: response.data\n      });\n    });\n  }\n\n  getPresentersFromServer = () => {\n    axios.get(\"/presenters\").then(response => {\n      console.log(response);\n      this.setState({\n        presenters: response.data\n      });\n    });\n  };\n\n  getPresenter = id => {\n    let matchedPresenterIndex;\n    this.state.presenters.forEach((stud, index) => {\n      if (stud._id === id) {\n        //console.log ('I a m getPresenter',id);\n        matchedPresenterIndex = index;\n      }\n    });\n    const machedStudData = this.state.presenters[matchedPresenterIndex];\n    return { index: matchedPresenterIndex, data: machedStudData };\n  };\n\n  onEdit = (presenter, index) => {\n    axios\n      .put(`/presenters/${presenter._id}`, presenter)\n      .then(response => {\n        //console.log ('I a m responding for edit',response);\n        let newStdents = this.state.presenters;\n        newStdents.splice(index, 1, presenter);\n\n        this.setState({\n          presenters: newStdents\n        });\n        console.log(\"I a m responding for edit\", this.state.presenters);\n      })\n      .catch(err => console.log(err));\n    //const updatedVal = this.props.presenters.map((dat,i) => {\n  };\n\n  /*onView = (presenter,index) => {\n      //this.props.history.push('/presenter/view/:id');\n    axios\n    .get(`/presenter/view/${this.props.match.params.id}`)\n    //.get (`/presenter/view/${presenter._id}`,presenter)\n    .then (response => {\n      console.log ('I a m responseOnView',response);\n      this.setState({\n        presenters: response.data\n      });\n     \n \n   })\n   .catch (err => console.log (err));\n   const updatedName = this.state.presenters.presentername\n   //const updatedView = this.state.presenters.filter(stud => stud._id === presenter._id);\n   //this.setState({\n   //presenters: updatedView\n  //});\n   }*/\n\n  render() {\n    console.log(\"i am presenters\", this.state.presenters);\n    return (\n      <Router>\n        <div className=\"container\">\n          <Header />\n\n          {/*<div className=\"header\">\n       <div className=\"add\"><Link style={{textDecoration: 'none', fontSize: '20px',color:'red'}} to=\"/presenters/add\" >Add Presenter</Link></div>\n       <div className=\"presentations\"><Link style={{textDecoration: 'none', fontSize: '20px',color:'red'}} to=\"/presenters\" >Presentations</Link></div>\n       <div className=\"home\"><Link style={{textDecoration: 'none', fontSize: '20px',color:'red'}} to=\"/\" >Home</Link></div>\n         \n    </div>*/}\n          <Switch>\n            <Route exact path=\"/\" component={Home} />\n            <Route path=\"/login\" component={LogInForm} />\n            <Route\n              path=\"/presenters/edit/:id\"\n              render={props => (\n                <EditPresenter\n                  {...props}\n                  onEdit={this.onEdit}\n                  presenter={this.getPresenter(props.match.params.id)}\n                />\n              )}\n            />\n            <Route path=\"/presenters/add\" component={AddPresenter} />\n            <Route\n              path=\"/presenters/show\"\n              render={props => (\n                <Presenters\n                  {...props}\n                  presenters={this.state.presenters}\n                  getPresentersFromServer={this.getPresentersFromServer}\n                />\n              )}\n            />\n            <Route\n              path=\"/presenter/view/:id\"\n              render={props => (\n                <View\n                  {...props}\n                  presenter={this.getPresenter(props.match.params.id)}\n                />\n              )}\n            />\n            <Route path=\"/not-found\" component={NotFound} />\n            <Redirect to=\"/not-found\" />\n          </Switch>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}